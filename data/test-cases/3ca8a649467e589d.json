{
  "uid" : "3ca8a649467e589d",
  "name" : "Verify All Products and Product Detail Page",
  "fullName" : "tests.product_management_feature_test.TestProductManagementFeature#test_product_detail_presence",
  "historyId" : "e55e2346f2ef98808b004defc91442b8",
  "time" : {
    "start" : 1706695995175,
    "stop" : 1706696012457,
    "duration" : 17282
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <tests.product_management_feature_test.TestProductManagementFeature object at 0x7f40fa0d7dd0>\n\n    @allure.title(\"Verify All Products and Product Detail Page\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.story(\"Product Display & Information\")\n    @allure.tag('TestCaseID: 8')\n    def test_product_detail_presence(self):\n        self.home_page.open()\n        self.home_page.is_opened()\n        self.home_page.click_products_button()\n        self.products_page.is_header_visible()\n>       self.products_page.is_opened()\n\ntests/product_management_feature_test.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/base_page.py:33: in is_opened\n    self.wait.until_not(EC.url_contains(\"#google_vignette\"))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"ac45be17d5f769d770d1176c2d4fdc13\")>\nmethod = <function url_contains.<locals>._predicate at 0x7f40f63e58a0>\nmessage = ''\n\n    def until_not(self, method: Callable[[D], T], message: str = \"\") -> Union[T, Literal[True]]:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value evaluates to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`, or\n                  ``True`` if `method` has raised one of the ignored exceptions\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if not value:\n                    return value\n            except self._ignored_exceptions:\n                return True\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../local/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:128: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "browser",
    "time" : {
      "start" : 1706695994017,
      "stop" : 1706695994905,
      "duration" : 888
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "setup",
    "time" : {
      "start" : 1706695994905,
      "stop" : 1706695995175,
      "duration" : 270
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1706695988410,
      "stop" : 1706695988498,
      "duration" : 88
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "self = <tests.product_management_feature_test.TestProductManagementFeature object at 0x7f40fa0d7dd0>\n\n    @allure.title(\"Verify All Products and Product Detail Page\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.story(\"Product Display & Information\")\n    @allure.tag('TestCaseID: 8')\n    def test_product_detail_presence(self):\n        self.home_page.open()\n        self.home_page.is_opened()\n        self.home_page.click_products_button()\n        self.products_page.is_header_visible()\n>       self.products_page.is_opened()\n\ntests/product_management_feature_test.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/base_page.py:33: in is_opened\n    self.wait.until_not(EC.url_contains(\"#google_vignette\"))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"ac45be17d5f769d770d1176c2d4fdc13\")>\nmethod = <function url_contains.<locals>._predicate at 0x7f40f63e58a0>\nmessage = ''\n\n    def until_not(self, method: Callable[[D], T], message: str = \"\") -> Union[T, Literal[True]]:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value evaluates to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`, or\n                  ``True`` if `method` has raised one of the ignored exceptions\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if not value:\n                    return value\n            except self._ignored_exceptions:\n                return True\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../local/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:128: TimeoutException",
    "steps" : [ {
      "name" : "Open https://automationexercise.com/ page",
      "time" : {
        "start" : 1706695995175,
        "stop" : 1706695996691,
        "duration" : 1516
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "Page https://automationexercise.com/ is opened",
      "time" : {
        "start" : 1706695996701,
        "stop" : 1706695996715,
        "duration" : 14
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "Click products header button",
      "time" : {
        "start" : 1706695996715,
        "stop" : 1706695996869,
        "duration" : 154
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "Site header visible",
      "time" : {
        "start" : 1706695996869,
        "stop" : 1706695996901,
        "duration" : 32
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "Page https://automationexercise.com/products is opened",
      "time" : {
        "start" : 1706695996908,
        "stop" : 1706696011955,
        "duration" : 15047
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \n\n",
      "statusTrace" : "  File \"/usr/workspace/pages/base_page.py\", line 33, in is_opened\n    self.wait.until_not(EC.url_contains(\"#google_vignette\"))\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/support/wait.py\", line 128, in until_not\n    raise TimeoutException(message)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true,
      "stepsCount" : 0
    } ],
    "attachments" : [ {
      "uid" : "6024f651e5b5b22f",
      "name" : "Opened page",
      "source" : "6024f651e5b5b22f.png",
      "type" : "image/png",
      "size" : 441458
    }, {
      "uid" : "5a4072b7cab47767",
      "name" : "Test Failure Details",
      "source" : "5a4072b7cab47767.txt",
      "type" : "text/plain",
      "size" : 96
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 5
  },
  "afterStages" : [ {
    "name" : "browser::0",
    "time" : {
      "start" : 1706696012509,
      "stop" : 1706696012624,
      "duration" : 115
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "tag",
    "value" : "TestCaseID: 8"
  }, {
    "name" : "story",
    "value" : "Product Display & Information"
  }, {
    "name" : "feature",
    "value" : "Product Management"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "product_management_feature_test"
  }, {
    "name" : "subSuite",
    "value" : "TestProductManagementFeature"
  }, {
    "name" : "host",
    "value" : "d8b36c83fe2f"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.product_management_feature_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "TestCaseID: 8" ]
  },
  "source" : "3ca8a649467e589d.json",
  "parameterValues" : [ ]
}