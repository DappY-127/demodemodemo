{
  "uid" : "6251178770bf78f3",
  "name" : "Remove Products From Cart",
  "fullName" : "tests.product_management_feature_test.TestProductManagementFeature#test_remove_product_from_cart",
  "historyId" : "799ee1752ae480c54be9c8281edb58db",
  "time" : {
    "start" : 1707064899977,
    "stop" : 1707064907844,
    "duration" : 7867
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: chrome=112.0.5615.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception",
  "statusTrace" : "self = <tests.product_management_feature_test.TestProductManagementFeature object at 0x7f3eaa6c67b0>\n\n    @allure.title(\"Remove Products From Cart\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.story(\"Cart & Wishlist\")\n    @allure.tag('TestCaseID: 17')\n    def test_remove_product_from_cart(self):\n        self.home_page.open()\n        self.home_page.is_opened()\n        self.home_page.click_products_button()\n        self.products_page.is_opened()\n        self.products_page.add_product_to_cart_by_name('Madame Top For Women')\n        self.products_page.click_continue_shopping_bttn()\n        self.products_page.add_product_to_cart_by_name('Winter Top')\n        self.products_page.click_continue_shopping_bttn()\n        self.products_page.add_product_to_cart_by_name('Lace Top For Women')\n        self.products_page.click_view_cart_bttn()\n        self.cart_page.is_opened()\n        self.cart_page.is_cart_products_present('Madame Top For Women', 'Winter Top', 'Lace Top For Women')\n>       self.cart_page.delete_first_cart_product()\n\ntests/product_management_feature_test.py:136: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/cart_page.py:90: in delete_first_cart_product\n    delete_button.click()\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:348: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f3eaa706f30>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: element is not attached to the page document\\\\n  (Session info: chrome=112.0.5615.165)\",\"stacktrace\":\"\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\nE         (Session info: chrome=112.0.5615.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\n\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "setup",
    "time" : {
      "start" : 1707064899713,
      "stop" : 1707064899977,
      "duration" : 264
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1707064852645,
      "stop" : 1707064852719,
      "duration" : 74
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "browser",
    "time" : {
      "start" : 1707064898833,
      "stop" : 1707064899713,
      "duration" : 880
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: chrome=112.0.5615.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception",
    "statusTrace" : "self = <tests.product_management_feature_test.TestProductManagementFeature object at 0x7f3eaa6c67b0>\n\n    @allure.title(\"Remove Products From Cart\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.story(\"Cart & Wishlist\")\n    @allure.tag('TestCaseID: 17')\n    def test_remove_product_from_cart(self):\n        self.home_page.open()\n        self.home_page.is_opened()\n        self.home_page.click_products_button()\n        self.products_page.is_opened()\n        self.products_page.add_product_to_cart_by_name('Madame Top For Women')\n        self.products_page.click_continue_shopping_bttn()\n        self.products_page.add_product_to_cart_by_name('Winter Top')\n        self.products_page.click_continue_shopping_bttn()\n        self.products_page.add_product_to_cart_by_name('Lace Top For Women')\n        self.products_page.click_view_cart_bttn()\n        self.cart_page.is_opened()\n        self.cart_page.is_cart_products_present('Madame Top For Women', 'Winter Top', 'Lace Top For Women')\n>       self.cart_page.delete_first_cart_product()\n\ntests/product_management_feature_test.py:136: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/cart_page.py:90: in delete_first_cart_product\n    delete_button.click()\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:348: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f3eaa706f30>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: element is not attached to the page document\\\\n  (Session info: chrome=112.0.5615.165)\",\"stacktrace\":\"\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\nE         (Session info: chrome=112.0.5615.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\n\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException",
    "steps" : [ {
      "name" : "Open https://automationexercise.com/ page",
      "time" : {
        "start" : 1707064899977,
        "stop" : 1707064900899,
        "duration" : 922
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "Page https://automationexercise.com/ is opened",
      "time" : {
        "start" : 1707064900899,
        "stop" : 1707064900914,
        "duration" : 15
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "Click products header button",
      "time" : {
        "start" : 1707064900914,
        "stop" : 1707064901789,
        "duration" : 875
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "Page https://automationexercise.com/products is opened",
      "time" : {
        "start" : 1707064901789,
        "stop" : 1707064901804,
        "duration" : 15
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "Add product: 'Madame Top For Women' to cart",
      "time" : {
        "start" : 1707064901804,
        "stop" : 1707064902322,
        "duration" : 518
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Scroll element into view",
        "time" : {
          "start" : 1707064901928,
          "stop" : 1707064901935,
          "duration" : 7
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "element_locator",
          "value" : "('xpath', \"(//p[text()='Madame Top For Women'])[1]\")"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true,
        "stepsCount" : 0
      }, {
        "name" : "Hover mouse over element",
        "time" : {
          "start" : 1707064901936,
          "stop" : 1707064902273,
          "duration" : 337
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "element_locator",
          "value" : "('xpath', \"(//p[text()='Madame Top For Women'])[1]\")"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true,
        "stepsCount" : 0
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "product_name",
        "value" : "'Madame Top For Women'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true,
      "stepsCount" : 2
    }, {
      "name" : "Click 'Continue Shopping' button",
      "time" : {
        "start" : 1707064902322,
        "stop" : 1707064903442,
        "duration" : 1120
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "'Your product has been added to cart.' modal pop up visible",
        "time" : {
          "start" : 1707064902322,
          "stop" : 1707064903406,
          "duration" : 1084
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false,
        "stepsCount" : 0
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true,
      "stepsCount" : 1
    }, {
      "name" : "Add product: 'Winter Top' to cart",
      "time" : {
        "start" : 1707064903443,
        "stop" : 1707064903786,
        "duration" : 343
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Scroll element into view",
        "time" : {
          "start" : 1707064903475,
          "stop" : 1707064903481,
          "duration" : 6
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "element_locator",
          "value" : "('xpath', \"(//p[text()='Winter Top'])[1]\")"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true,
        "stepsCount" : 0
      }, {
        "name" : "Hover mouse over element",
        "time" : {
          "start" : 1707064903482,
          "stop" : 1707064903743,
          "duration" : 261
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "element_locator",
          "value" : "('xpath', \"(//p[text()='Winter Top'])[1]\")"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true,
        "stepsCount" : 0
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "product_name",
        "value" : "'Winter Top'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true,
      "stepsCount" : 2
    }, {
      "name" : "Click 'Continue Shopping' button",
      "time" : {
        "start" : 1707064903787,
        "stop" : 1707064904881,
        "duration" : 1094
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "'Your product has been added to cart.' modal pop up visible",
        "time" : {
          "start" : 1707064903787,
          "stop" : 1707064904854,
          "duration" : 1067
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false,
        "stepsCount" : 0
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true,
      "stepsCount" : 1
    }, {
      "name" : "Add product: 'Lace Top For Women' to cart",
      "time" : {
        "start" : 1707064904881,
        "stop" : 1707064905269,
        "duration" : 388
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Scroll element into view",
        "time" : {
          "start" : 1707064904910,
          "stop" : 1707064904917,
          "duration" : 7
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "element_locator",
          "value" : "('xpath', \"(//p[text()='Lace Top For Women'])[1]\")"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true,
        "stepsCount" : 0
      }, {
        "name" : "Hover mouse over element",
        "time" : {
          "start" : 1707064904917,
          "stop" : 1707064905222,
          "duration" : 305
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "element_locator",
          "value" : "('xpath', \"(//p[text()='Lace Top For Women'])[1]\")"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true,
        "stepsCount" : 0
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "product_name",
        "value" : "'Lace Top For Women'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true,
      "stepsCount" : 2
    }, {
      "name" : "Click 'View Cart' button",
      "time" : {
        "start" : 1707064905269,
        "stop" : 1707064907232,
        "duration" : 1963
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "'Your product has been added to cart.' modal pop up visible",
        "time" : {
          "start" : 1707064905269,
          "stop" : 1707064906337,
          "duration" : 1068
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false,
        "stepsCount" : 0
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true,
      "stepsCount" : 1
    }, {
      "name" : "Page https://automationexercise.com/view_cart is opened",
      "time" : {
        "start" : 1707064907233,
        "stop" : 1707064907243,
        "duration" : 10
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "Products at cart presence",
      "time" : {
        "start" : 1707064907243,
        "stop" : 1707064907619,
        "duration" : 376
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Check if the cart is not empty",
        "time" : {
          "start" : 1707064907243,
          "stop" : 1707064907422,
          "duration" : 179
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "90de2d1b0b56fcc4",
          "name" : "Cart Empty Check",
          "source" : "90de2d1b0b56fcc4.attach",
          "type" : "text/plain",
          "size" : 20
        }, {
          "uid" : "d830d36e48c4e946",
          "name" : "Cart Product",
          "source" : "d830d36e48c4e946.png",
          "type" : "image/png",
          "size" : 116895
        } ],
        "parameters" : [ ],
        "attachmentsCount" : 2,
        "shouldDisplayMessage" : false,
        "hasContent" : true,
        "stepsCount" : 0
      }, {
        "name" : "Get list of product names in the cart",
        "time" : {
          "start" : 1707064907422,
          "stop" : 1707064907459,
          "duration" : 37
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "b3c48aaf470d3c2a",
          "name" : "Cart Products",
          "source" : "b3c48aaf470d3c2a.attach",
          "type" : "text/plain",
          "size" : 67
        } ],
        "parameters" : [ ],
        "attachmentsCount" : 1,
        "shouldDisplayMessage" : false,
        "hasContent" : true,
        "stepsCount" : 0
      } ],
      "attachments" : [ {
        "uid" : "726c75ed25251d5f",
        "name" : "Products Presence Check",
        "source" : "726c75ed25251d5f.attach",
        "type" : "text/plain",
        "size" : 70
      }, {
        "uid" : "ddb6952937e6e49e",
        "name" : "Cart products",
        "source" : "ddb6952937e6e49e.png",
        "type" : "image/png",
        "size" : 116895
      } ],
      "parameters" : [ {
        "name" : "product_names_to_check",
        "value" : "('Madame Top For Women', 'Winter Top', 'Lace Top For Women')"
      } ],
      "attachmentsCount" : 5,
      "shouldDisplayMessage" : false,
      "hasContent" : true,
      "stepsCount" : 2
    }, {
      "name" : "Delete first product from cart",
      "time" : {
        "start" : 1707064907619,
        "stop" : 1707064907842,
        "duration" : 223
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: chrome=112.0.5615.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\n\n",
      "statusTrace" : "  File \"/usr/local/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/usr/workspace/pages/cart_page.py\", line 90, in delete_first_cart_product\n    delete_button.click()\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 348, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
      "steps" : [ {
        "name" : "Check if the cart is not empty",
        "time" : {
          "start" : 1707064907619,
          "stop" : 1707064907752,
          "duration" : 133
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "330bf92bab5de3bb",
          "name" : "Cart Empty Check",
          "source" : "330bf92bab5de3bb.attach",
          "type" : "text/plain",
          "size" : 20
        }, {
          "uid" : "8d627b1ad7ffa337",
          "name" : "Cart Product",
          "source" : "8d627b1ad7ffa337.png",
          "type" : "image/png",
          "size" : 116895
        } ],
        "parameters" : [ ],
        "attachmentsCount" : 2,
        "shouldDisplayMessage" : false,
        "hasContent" : true,
        "stepsCount" : 0
      }, {
        "name" : "Get list of product names in the cart",
        "time" : {
          "start" : 1707064907804,
          "stop" : 1707064907832,
          "duration" : 28
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "ba32036c541ad395",
          "name" : "Cart Products",
          "source" : "ba32036c541ad395.attach",
          "type" : "text/plain",
          "size" : 67
        } ],
        "parameters" : [ ],
        "attachmentsCount" : 1,
        "shouldDisplayMessage" : false,
        "hasContent" : true,
        "stepsCount" : 0
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 3,
      "shouldDisplayMessage" : true,
      "hasContent" : true,
      "stepsCount" : 2
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 8,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 26
  },
  "afterStages" : [ {
    "name" : "browser::0",
    "time" : {
      "start" : 1707064907898,
      "stop" : 1707064908014,
      "duration" : 116
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "story",
    "value" : "Cart & Wishlist"
  }, {
    "name" : "feature",
    "value" : "Product Management"
  }, {
    "name" : "tag",
    "value" : "TestCaseID: 17"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "product_management_feature_test"
  }, {
    "name" : "subSuite",
    "value" : "TestProductManagementFeature"
  }, {
    "name" : "host",
    "value" : "d52989e04d7f"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.product_management_feature_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "TestCaseID: 17" ]
  },
  "source" : "6251178770bf78f3.json",
  "parameterValues" : [ ]
}