{
  "uid" : "ac99c3c6e0e09095",
  "name" : "Remove All Products From Cart",
  "fullName" : "tests.product_management_feature_test.TestProductManagementFeature#test_remove_product_from_cart_until_products_present",
  "historyId" : "f348e6fd044b53ac7610866cf3c2ac85",
  "time" : {
    "start" : 1706535938541,
    "stop" : 1706535956789,
    "duration" : 18248
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <tests.product_management_feature_test.TestProductManagementFeature object at 0x7ff952e3ca70>\n\n    @allure.title(\"Remove All Products From Cart\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.story(\"Cart & Wishlist\")\n    @allure.tag('TestCaseID: ~')\n    def test_remove_product_from_cart_until_products_present(self):\n        self.home_page.open()\n        self.home_page.is_opened()\n        self.home_page.click_products_button()\n>       self.products_page.is_opened()\n\ntests/product_management_feature_test.py:147: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/base_page.py:32: in is_opened\n    self.wait.until(EC.url_to_be(self.PAGE_URL.split('#')[0]))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a5f55c1fffb29eef83047d69cad7ff0b\")>\nmethod = <function url_to_be.<locals>._predicate at 0x7ff95425aa20>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../local/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1706535857904,
      "stop" : 1706535857988,
      "duration" : 84
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "browser",
    "time" : {
      "start" : 1706535937383,
      "stop" : 1706535938268,
      "duration" : 885
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "setup",
    "time" : {
      "start" : 1706535938268,
      "stop" : 1706535938540,
      "duration" : 272
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "self = <tests.product_management_feature_test.TestProductManagementFeature object at 0x7ff952e3ca70>\n\n    @allure.title(\"Remove All Products From Cart\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.story(\"Cart & Wishlist\")\n    @allure.tag('TestCaseID: ~')\n    def test_remove_product_from_cart_until_products_present(self):\n        self.home_page.open()\n        self.home_page.is_opened()\n        self.home_page.click_products_button()\n>       self.products_page.is_opened()\n\ntests/product_management_feature_test.py:147: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/base_page.py:32: in is_opened\n    self.wait.until(EC.url_to_be(self.PAGE_URL.split('#')[0]))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a5f55c1fffb29eef83047d69cad7ff0b\")>\nmethod = <function url_to_be.<locals>._predicate at 0x7ff95425aa20>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../local/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException",
    "steps" : [ {
      "name" : "Open https://automationexercise.com/ page",
      "time" : {
        "start" : 1706535938541,
        "stop" : 1706535940445,
        "duration" : 1904
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Site header visible",
      "time" : {
        "start" : 1706535940445,
        "stop" : 1706535940471,
        "duration" : 26
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Page https://automationexercise.com/ is opened",
      "time" : {
        "start" : 1706535940471,
        "stop" : 1706535940475,
        "duration" : 4
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Click products header button",
      "time" : {
        "start" : 1706535940476,
        "stop" : 1706535941728,
        "duration" : 1252
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Site header visible",
      "time" : {
        "start" : 1706535941729,
        "stop" : 1706535941739,
        "duration" : 10
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Page https://automationexercise.com/products is opened",
      "time" : {
        "start" : 1706535941739,
        "stop" : 1706535956786,
        "duration" : 15047
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \n\n",
      "statusTrace" : "  File \"/usr/workspace/pages/base_page.py\", line 32, in is_opened\n    self.wait.until(EC.url_to_be(self.PAGE_URL.split('#')[0]))\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/support/wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "f235bb0dc1fc20ff",
      "name" : "Test Failure Details",
      "source" : "f235bb0dc1fc20ff.txt",
      "type" : "text/plain",
      "size" : 96
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 6,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "browser::0",
    "time" : {
      "start" : 1706535956797,
      "stop" : 1706535956913,
      "duration" : 116
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "TestCaseID: ~"
  }, {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "feature",
    "value" : "Product Management"
  }, {
    "name" : "story",
    "value" : "Cart & Wishlist"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "product_management_feature_test"
  }, {
    "name" : "subSuite",
    "value" : "TestProductManagementFeature"
  }, {
    "name" : "host",
    "value" : "047a55d655cd"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.product_management_feature_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "TestCaseID: ~" ]
  },
  "source" : "ac99c3c6e0e09095.json",
  "parameterValues" : [ ]
}